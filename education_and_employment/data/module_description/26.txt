The precise set of methods and algorithms used to illustrate and explore the main concepts will change slightly from year to year. However, the main topic headings are expected to be fairly stable.- Classification and Regression:Linear Regression, logistic regression, Bayes classifiers- Expanded feature representations:Basis functions, neural networks, kernel methods- Generalization, regularization and inference:Penalised cost functions, Bayesian prediction, learning theory- Model selection, pruning and combination:Cross-validation, Bayesian methods, sparsifying regularizers, ensemble methods.- Representation and metric learning:Dimensionality reduction, clustering, feature learningTo support these topics we will also cover:- Optimization and Inference algorithms:Stochastic gradient descent, simple Monte Carlo ideas, and more specialised methods as required.- Practical issues:Formulating problems as machine learning, adapting methods to fit problems.Numerical and programming issues important for machine learning.Ethical issues, such as responsible application of methods and privacy concerns. Machine learning is a field devoted to developing algorithms that adapt their behaviour to data, providing useful representations of the data and/or predictions. This course covers some fundamental theoretical concepts in machine learning, and common patterns for implementing methods in practice. The intended audience are those wanting the background required to begin research and development of machine learning methods.This is an advanced course. Students should not choose this class without the required background (see "Other Requirements" box); students without this background are strongly advised to take a more practical-based course, such as Applied Machine Learning (INFR11211). This course is open to all Informatics students including those on joint degrees. For external students where this course is not listed in your DPT, please seek special permission from the course organiser.This course requires practical mathematical application of algebra, vectors and matrices, calculus, probability, and problem solving. For example, you will need to be able to differentiate linear algebra expressions with respect to vectors, interpret inner-products and quadratic forms geometrically, and compute expectations of linear algebra expressions under simple distributions. Some of the required details can be learned during the course. However, practical mathematical skills take time to accumulate and a strong mathematical background is essential.Practical exercises usually require using a particular numerical language such as Matlab or Python+NumPy. We will assume and require sufficient past programming experience that a new package can be learned on the fly.