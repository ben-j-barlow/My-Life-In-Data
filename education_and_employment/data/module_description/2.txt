CS126 is all about data structures and how to program them.  
  We are interested in: what common data structures exist; how we can program those data structures; how we can represent them efficiently; how we can reason about them (in a formal manner). We are also interested in common algorithms that use data structures, including: searching for data; sorting data. This is an indicative module outline only to give an indication of the sort of topics that may be covered. Actual sessions held may differ.
    
   Types and their properties: simple types in programming languages; relationship between familiar mathematical and program objects of given type. Using predicate logic to state properties of types and their operations in terms of pre- and post-conditions.  Abstract data types: specification of familiar abstract objects (eg complex numbers, sets, sequences, matrices) and their operations, comparison with their implementation using a typical	programming language. Specification and implementation of some important standard types (eg strings, stacks and queues).  Algorithms: relationship	between data	structures	and algorithms; some standard algorithms for searching, sorting and pattern matching. Elementary analysis of complexity. Reasoning about the correctness of the implementation of simple algorithms. Specifying abstract data types and implementing them in an object-oriented programming language  Estimating the asymptotic running time of simple algorithms  Using basic data structures to implement efficient algorithms Creative problem solving